{"version":3,"sources":["elements/Transfers.js","data/data.js","elements/SortOptions.js","api/Loader.js","api/AviasalesHandler.js","elements/Card.js","elements/TicketsManager.js","App.js","reportWebVitals.js","index.js"],"names":["Transfers","props","_items","items","_searchValues","changed","onChange","current","document","querySelector","querySelectorAll","forEach","checkbox","checked","push","value","length","this","_switchOnAllFilter","_checkState","e","target","parentNode","attributes","data","checkedStatus","_swtichOffFilteres","_swtichOffAllFilter","id","map","item","className","htmlFor","name","type","defaultChecked","caption","_changeHandler","_getCheckboxItems","React","Component","transferSortValues","ticketsSortValues","SortOptions","_sortOption","onInput","_getOptions","Loader","url","_url","fetch","then","response","json","error","_loadJson","AviasalesHandler","onGetData","_searchIdUrl","_searchTicketsUrl","returnData","loader","getData","search","requestNewData","searchId","ticketsData","tickets","setTimeout","requestData","Card","_price","ticket","price","_carrier","carrier","_startFrom","segments","origin","_startTo","destination","_startDate","date","_startStops","stops","_startDuaration","duration","_finishFrom","_finishTo","_finishDate","_finishStops","_finishDuaration","options","hour","minute","hour12","dateObj","Date","dateFrom","toLocaleString","setMinutes","getMinutes","dateTo","join","substr","time","hours","parseInt","mins","number","_getPrice","alt","src","_getCarrierLogo","_getDate","_getDaration","_getTransfersText","_getStopsString","TicketsManager","transfersSort","bind","ticketsSort","_serverUrl","state","sortedTickets","renderedTickets","_sortTicketsVal","_sortTransfersVal","slice","_sortTickets","setState","_originalTicketsData","index","key","element","remove","filteredItems","includes","filter","transfersTo","transfersFrom","_sortByPrice","_sortByTime","_sortByOptimal","sort","a","b","durationA","durationB","from","to","onClick","_resendData","_renderTickets","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.38329834.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Transfers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._items = this.props.items;\r\n        this._searchValues = [-1];\r\n        this.changed = this.props.onChange;\r\n    }\r\n    _checkState() {\r\n        const current = [];\r\n        document.querySelector('.transfers')\r\n        .querySelectorAll('.transfers__checkbox').forEach(checkbox => {\r\n            checkbox.checked&&current.push(+checkbox.value)});\r\n        if(current.length===0) {\r\n            this._switchOnAllFilter()\r\n            this._checkState();\r\n        }\r\n        else {\r\n            this._searchValues = current;\r\n            this.changed(this._searchValues);\r\n        }\r\n        \r\n    }\r\n    _changeHandler(e) {\r\n        const value = e.target.parentNode.attributes.data.value;\r\n        const checkedStatus = e.target.checked;\r\n        if((+value===-1) && (checkedStatus===true)) {\r\n            this._swtichOffFilteres()\r\n        };\r\n        if((!(+value===-1)) && (checkedStatus===true)) {\r\n            this._swtichOffAllFilter()\r\n        }\r\n        this._checkState();\r\n    }\r\n\r\n    _switchOnAllFilter() {\r\n        document.querySelector('.transfers')\r\n        .querySelector('#transfer-all').checked=true;\r\n\r\n    }\r\n\r\n    _swtichOffAllFilter() {\r\n        document.querySelector('.transfers')\r\n        .querySelector('#transfer-all').checked=false;\r\n    }\r\n    _swtichOffFilteres() {\r\n        document.querySelector('.transfers')\r\n        .querySelectorAll('.transfers__checkbox').forEach(checkbox => {\r\n            checkbox.id!=='transfer-all' && (checkbox.checked=false);\r\n        })\r\n    }\r\n\r\n    _getCheckboxItems() {\r\n        return this._items.map(item=> { return(\r\n            <label className=\"transfers__item\" htmlFor={item.name} key={item.name} data={item.value}>\r\n                <input type=\"checkbox\" name={item.name} id={item.name} className=\"transfers__checkbox\" defaultChecked={item.checked} value={item.value}></input>\r\n                <p className=\"transfers__checkbox-caption\">{item.caption}</p>\r\n            </label>\r\n        )\r\n        })\r\n    }\r\n    render() { \r\n        return (\r\n            <fieldset className=\"transfers\" onChange={(e)=>{this._changeHandler(e)}}>\r\n                <label className=\"transfers__caption\">Количество пересадок</label>\r\n                {this._getCheckboxItems()}\r\n            </fieldset>\r\n        )\r\n    }\r\n}","const transferSortValues = [\r\n    {\r\n        name: 'transfer-all',\r\n        caption: 'Все',\r\n        value: '-1',\r\n        checked: true,\r\n    },\r\n    {\r\n        name: 'transfer-no-transfers',\r\n        caption: 'Без пересадок',\r\n        value: '0',\r\n        checked: false,\r\n    },\r\n    {\r\n        name: 'transfer-1',\r\n        caption: '1 пересадка',\r\n        value: '1',\r\n        checked: false,\r\n    },\r\n    {\r\n        name: 'transfer-2',\r\n        caption: '2 пересадки',\r\n        value: '2',\r\n        checked: false,\r\n    },\r\n    {\r\n        name: 'transfer-3',\r\n        caption: '3 пересадки',\r\n        value: '3',\r\n        checked: false,\r\n    },\r\n\r\n]\r\n\r\n\r\nconst ticketsSortValues = [\r\n    {\r\n        name: 'cheapest',\r\n        caption: 'Самый дешевый',\r\n        checked: true,\r\n    },\r\n    {\r\n        name: 'fastest',\r\n        caption: 'Самый быстрый',\r\n        checked: false,\r\n    },\r\n    {\r\n        name: 'optimal',\r\n        caption: 'Оптимальный',\r\n        checked: false,\r\n    }\r\n]\r\n\r\nexport {transferSortValues, ticketsSortValues};","import React from \"react\";\r\n\r\nexport default class SortOptions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._items = this.props.items;\r\n        this._sortOption = 'cheapest';\r\n        this.changed = this.props.onChange;\r\n    }\r\n    _getOptions() {\r\n        return this._items.map(item=>{\r\n            return (\r\n                <div className=\"sort-options__item\" key={item.name}>\r\n                    <input id={item.name} type=\"radio\" name=\"sort-option\" value={item.name} defaultChecked={item.checked} onInput={(e)=>{this._changeHandler(e)}}></input>\r\n                    <label htmlFor={item.name}>{item.caption}</label>\r\n                </div>)\r\n        })\r\n    }\r\n    _changeHandler(e) {\r\n        this._sortOption = e.target.value;\r\n        this.changed(this._sortOption);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"sort-options\">\r\n                {this._getOptions()}\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nexport default class Loader {\r\n    constructor(url) {\r\n        this._url = url;\r\n    }\r\n    _loadJson() {\r\n        return fetch(this._url)\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n          return data;\r\n        },(error)=> {\r\n            return error\r\n        });\r\n    }\r\n    getData() {\r\n        return this._loadJson();\r\n    }\r\n    requestNewData(url) {\r\n        this._url = url\r\n        return this._loadJson();\r\n    }\r\n}","import Loader from './Loader'\r\n\r\nexport default class AviasalesHandler {\r\n    constructor(url, onGetData) {\r\n        this._searchIdUrl = url[0];\r\n        this._searchTicketsUrl = url[1];\r\n        this.returnData = onGetData;\r\n    }\r\n    requestData() {\r\n        const loader = new Loader(this._searchIdUrl);\r\n        loader.getData().then(search => {\r\n            loader.requestNewData(\r\n                this._searchTicketsUrl + search.searchId)\r\n                .then(ticketsData => {\r\n                    if(ticketsData.tickets) {\r\n                        this.returnData(ticketsData);\r\n                    }\r\n                    else {\r\n                        setTimeout(()=>this.requestData(),1000);\r\n                    }\r\n                })\r\n        });\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._price = this.props.ticket.price;\r\n        this._carrier = this.props.ticket.carrier;\r\n        this._startFrom = this.props.ticket.segments[0].origin;\r\n        this._startTo = this.props.ticket.segments[0].destination;\r\n        this._startDate = this.props.ticket.segments[0].date;\r\n        this._startStops = this.props.ticket.segments[0].stops;\r\n        this._startDuaration = this.props.ticket.segments[0].duration;\r\n        this._finishFrom = this.props.ticket.segments[1].origin;\r\n        this._finishTo = this.props.ticket.segments[1].destination;\r\n        this._finishDate = this.props.ticket.segments[1].date;\r\n        this._finishStops = this.props.ticket.segments[1].stops;\r\n        this._finishDuaration = this.props.ticket.segments[1].duration;\r\n    }\r\n\r\n    _getCarrierLogo() {\r\n        return `//pics.avs.io/99/36/${this._carrier}.png`\r\n    }\r\n\r\n    _getDate(date, duration){\r\n        const options = {\r\n            hour: 'numeric', minute: 'numeric',\r\n            hour12: false\r\n          };\r\n        const dateObj = new Date(date);\r\n        const dateFrom = dateObj.toLocaleString('ru',options);\r\n        dateObj.setMinutes(dateObj.getMinutes() + duration);\r\n        const dateTo = dateObj.toLocaleString('ru',options);\r\n        return `${dateFrom} - ${dateTo}`\r\n    }\r\n\r\n    _getStopsString(stops) {\r\n        return stops.join(', ')\r\n    }\r\n\r\n    _getPrice() {\r\n        const price=this._price+''\r\n        return price.substr(0, 2)+\" \"+price.substr(2);\r\n    }\r\n    _getDaration(time) {\r\n        const hours = parseInt(time / 60)\r\n        const mins = time % 60\r\n        return `${hours}ч ${mins}м`\r\n    }\r\n\r\n    _getTransfersText(stops) {\r\n        const number = stops.length;\r\n        switch (number) {\r\n            case 1 : {\r\n                return '1 пересадка';\r\n            }\r\n            case 2: \r\n            case 3: \r\n            case 4 : {\r\n                return `${number} пересадки`;\r\n            }\r\n            default : {\r\n                return `${number} пересадок`;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <div className=\"card\">\r\n          <div className=\"card__main-info\">\r\n            <span className=\"card__price\">{this._getPrice()} Р</span>\r\n            <img className=\"card__company\" alt={this._carrier} src={this._getCarrierLogo()}></img>\r\n          </div>\r\n          <div className=\"card__flight-info\">\r\n            <div className=\"info info_type_to\">\r\n              <span className=\"info__title\">\r\n                {this._startFrom} - {this._startTo}\r\n              </span>\r\n              <span className=\"info__value\">\r\n                {this._getDate(this._startDate, this._startDuaration)}\r\n              </span>\r\n            </div>\r\n            <div className=\"info info_type_time-to\">\r\n              <span className=\"info__title\">\r\n                В пути\r\n              </span>\r\n              <span className=\"info__value\">\r\n                {this._getDaration(this._startDuaration)}\r\n              </span>\r\n            </div>\r\n            <div className=\"info info_type_transfers-to\">\r\n              <span className=\"info__title\">\r\n                {this._getTransfersText(this._startStops)}\r\n              </span>\r\n              <span className=\"info__value\">\r\n                {this._getStopsString(this._startStops)}\r\n              </span>\r\n            </div>\r\n            <div className=\"info info_type_from\">\r\n              <span className=\"info__title\">\r\n              {this._finishFrom} - {this._finishTo}\r\n              </span>\r\n              <span className=\"info__value\">\r\n              {this._getDate(this._finishDate, this._finishDuaration)}\r\n              </span>\r\n            </div>\r\n            <div className=\"info info_type_time-to\">\r\n              <span className=\"info__title\">\r\n                В пути\r\n              </span>\r\n              <span className=\"info__value\">\r\n              {this._getDaration(this._finishDuaration)}\r\n              </span>\r\n            </div>\r\n            <div className=\"info info_type_transfers-to\">\r\n              <span className=\"info__title\">\r\n              {this._getTransfersText(this._finishStops)}\r\n              </span>\r\n              <span className=\"info__value\">\r\n              {this._getStopsString(this._finishStops)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )\r\n        \r\n    }\r\n}","import React from \"react\";\r\nimport Transfers from './Transfers';\r\nimport { transferSortValues, ticketsSortValues } from '../data/data'\r\nimport SortOptions from \"./SortOptions\";\r\nimport AviasalesHandler from \"../api/AviasalesHandler\"\r\nimport Card from \"./Card\";\r\n\r\nexport default class TicketsManager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.transfersSort = this.transfersSort.bind(this);\r\n        this.ticketsSort = this.ticketsSort.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        this._serverUrl = this.props.url;\r\n        this.state = \r\n            {\r\n                sortedTickets: {}, \r\n                renderedTickets: 4\r\n            };\r\n        this._sortTicketsVal = 'cheapest';\r\n        this._sortTransfersVal = [-1];\r\n        }\r\n        \r\n    transfersSort(value) {\r\n        this._sortTransfersVal = value.slice();;\r\n        this._sortTickets();\r\n    }\r\n    ticketsSort(value) {\r\n        this._sortTicketsVal = value;\r\n        this._sortTickets();\r\n    }\r\n    _resendData() {\r\n        this.setState({sortedTickets: {}});\r\n        const aviasalesHandler = new AviasalesHandler(this._serverUrl, this.getData);\r\n        aviasalesHandler.requestData();\r\n    }\r\n\r\n    getData(data) {\r\n        this._originalTicketsData = data;\r\n        this._originalTicketsData.tickets.forEach((ticket, index)=>{ticket.key = 'ticket'+index})\r\n        this.setState({sortedTickets: this._originalTicketsData.tickets});\r\n        this._sortTickets();\r\n        \r\n    }\r\n    _clearTickets() {\r\n        document.querySelectorAll('.card').forEach((element) => element.remove())\r\n    }\r\n\r\n    _sortTickets() {\r\n        this.setState({renderedTickets: 4})\r\n        let filteredItems;\r\n        if(!this._sortTransfersVal.includes(-1)) {\r\n            filteredItems = this._originalTicketsData.tickets.filter(item =>{\r\n                const transfersTo = item.segments[0].stops.length;\r\n                const transfersFrom = item.segments[1].stops.length;\r\n                return (this._sortTransfersVal.includes(transfersTo) \r\n                || this._sortTransfersVal.includes(transfersFrom));\r\n            })\r\n        }\r\n        else {\r\n            filteredItems = this._originalTicketsData.tickets.slice() || [];\r\n        }\r\n        switch (this._sortTicketsVal) {\r\n            case ('cheapest'): {\r\n                this._sortByPrice(filteredItems);\r\n                break;\r\n            }\r\n            case ('fastest'): {\r\n                this._sortByTime(filteredItems);\r\n                break;\r\n            }\r\n            case ('optimal'): {\r\n                this._sortByOptimal(filteredItems);\r\n                break;\r\n            }\r\n            default : {\r\n                this._sortByPrice(filteredItems);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    _sortByTime(filteredItems) {\r\n        const sortedTickets = filteredItems.sort((a, b)=>{\r\n            const durationA = a.segments[0].duration + a.segments[1].duration;\r\n            const durationB = b.segments[0].duration + b.segments[1].duration;\r\n            return durationA - durationB;\r\n        }); \r\n        this.setState({sortedTickets: sortedTickets});\r\n\r\n    }\r\n\r\n    _sortByPrice(filteredItems) {\r\n    const sortedTickets = filteredItems.sort((a, b)=>{\r\n        return a.price - b.price;\r\n    }); \r\n    this.setState({sortedTickets: sortedTickets});\r\n    }\r\n\r\n    _sortByOptimal(filteredItems) { //FIX ALGORITHM LATER\r\n/*         const parameters = {\r\n            minPrice: filteredItems[0].price,\r\n             maxPrice: filteredItems[0].price,\r\n              minDuration: filteredItems[0].segments[0].duration + filteredItems[0].segments[1].duration,\r\n               maxDuration: filteredItems[0].segments[0].duration + filteredItems[0].segments[1].duration\r\n        };\r\n        filteredItems.forEach((item)=>{\r\n            const duration = item.segments[0].duration + item.segments[1].duration;\r\n            item.price>=parameters.maxPrice&&(parameters.maxPrice = item.price);\r\n            item.price<=parameters.minPrice&&(parameters.minPrice = item.price);\r\n            duration>=parameters.maxDuration&&(parameters.maxDuration = duration);\r\n            duration<=parameters.minDuration&&(parameters.minDuration = duration);\r\n        })\r\n        const priceRange = parameters.maxPrice-parameters.minPrice;\r\n        const durationRange = parameters.maxDuration-parameters.minDuration;\r\n        const incrCoeff = priceRange / durationRange */\r\n        const incrCoeff = 1;\r\n        const sortedTickets = filteredItems.sort((a, b)=>{\r\n            const durationA = a.segments[0].duration + a.segments[1].duration;\r\n            const durationB = b.segments[0].duration + b.segments[1].duration;\r\n            return a.price + (durationA * incrCoeff) - b.price + (durationB * incrCoeff);\r\n        });  \r\n        this.setState({sortedTickets: sortedTickets});\r\n    }\r\n\r\n    _renderTickets(from, to) {\r\n        return this.state.sortedTickets\r\n        .filter((ticket, index)=>{return (index>=from && index<=to)})\r\n        .map((ticket, index)=>{\r\n                return(<Card ticket={ticket} key={ticket.key}/>)\r\n\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const aviasalesHandler = new AviasalesHandler(this._serverUrl, this.getData)\r\n        aviasalesHandler.requestData();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <header className=\"header\">\r\n                <button type=\"submit\" className=\"button-reset\" onClick={()=>this._resendData()}>\r\n                    </button>\r\n                </header>\r\n                <main className=\"content\">\r\n                    <Transfers items={transferSortValues} onChange={this.transfersSort}/>\r\n                    <SortOptions items={ticketsSortValues} onChange={this.ticketsSort}/>\r\n                    {(this.state.sortedTickets.length>0 && this._renderTickets(0, this.state.renderedTickets)) || <div className=\"loader\"></div>}\r\n                    <button type=\"button\" \r\n                    className=\"show-more-button\" \r\n                    onClick={()=>this.setState({renderedTickets: this.state.renderedTickets+5})}>\r\n                        Показать еще пять билетов!\r\n                </button>\r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n}","import TicketsManager from './elements/TicketsManager';\nimport './styles/pages/index.css';\n\nconst SearchIdUrl='https://front-test.beta.aviasales.ru/search';\nconst SearchTicketsUrl='https://front-test.beta.aviasales.ru/tickets?searchId='\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <TicketsManager url={[SearchIdUrl, SearchTicketsUrl]}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}